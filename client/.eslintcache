[{"C:\\Users\\users\\Desktop\\chut\\client\\src\\index.js":"1","C:\\Users\\users\\Desktop\\chut\\client\\src\\App.js":"2","C:\\Users\\users\\Desktop\\chut\\client\\src\\reportWebVitals.js":"3","C:\\Users\\users\\Desktop\\chut\\client\\src\\socket.js":"4","C:\\Users\\users\\Desktop\\chut\\client\\src\\reducer.js":"5","C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\Chat\\Chat.component.jsx":"6","C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\ChatMessages\\ChatMessages.component.jsx":"7","C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\ChatsList\\ChatsList.component.jsx":"8","C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\ChatListItem\\ChatListItem.component.jsx":"9"},{"size":478,"mtime":1611348853000,"results":"10","hashOfConfig":"11"},{"size":2359,"mtime":1611514774548,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611348853000,"results":"13","hashOfConfig":"11"},{"size":104,"mtime":1611501741425,"results":"14","hashOfConfig":"11"},{"size":924,"mtime":1611496531985,"results":"15","hashOfConfig":"11"},{"size":2677,"mtime":1611514814513,"results":"16","hashOfConfig":"11"},{"size":1851,"mtime":1611554580596,"results":"17","hashOfConfig":"11"},{"size":526,"mtime":1611554804896,"results":"18","hashOfConfig":"11"},{"size":882,"mtime":1611555047219,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"zmrzq7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\users\\Desktop\\chut\\client\\src\\index.js",[],["43","44"],"C:\\Users\\users\\Desktop\\chut\\client\\src\\App.js",["45"],"import React, { useState } from 'react';\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nimport ChatComonent from './components/Chat/Chat.component';\nimport reducer from './reducer';\nimport socket from './socket';\n\nimport './App.css';\n\nconst App = () => {\n  let user = {};\n  const [state, dispatch] = useReducer(reducer, {\n    joined: false,\n    chatID: null,\n    userName: null,\n    users: {},\n    messages: [],\n    chatIds: []\n  });\n\n  const [searchValue, setSearchValue] = useState('')\n\n  const setUsers = (users) => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users,\n    });\n  }\n  const onEnter = async () => {\n    user = JSON.parse(localStorage.getItem('chatik-user'));\n    if (!user) {\n      socket.emit('GENERATE_NEW_USER');\n    } else {\n      socket.emit('CONNECT_USER_TO_ALL_CHATS', { user });\n    };\n    const res = await axios.get(\"http://localhost:8080/chats\");\n\n    user && delete res.data.users[user.id]\n\n    setUsers(res.data.users)\n  };\n\n  const onNewUserJoined = ({ newUser }) => {\n    const newChatId = `${user.id}_${newUser.id}`;\n    socket.emit(\"JOIN_CHAT\", { newChatId });\n  };\n\n\n  const onUserGenerated = ({ user: generatedUser }) => {\n    user = generatedUser;\n    localStorage.setItem('chatik-user', JSON.stringify(generatedUser));\n  };\n\n  const onUserListChanged = ({ chat }) => {\n    delete chat[user.id];\n    setUsers({ ...state.users, ...chat })\n  };\n  const onChatIdsAdded = ({ global_chatIds }) => {\n    dispatch({\n      type: 'SET_CHAT_IDS',\n      payload: global_chatIds,\n    });\n  };\n\n  useEffect(() => {\n    onEnter();\n    socket.on('NEW_USER_JOINED', onNewUserJoined);\n    socket.on('USER_GENERATED', onUserGenerated);\n    socket.on('USERS_LIST_CHANGED', onUserListChanged);\n    socket.on('CHAT_IDS_ADDED', onChatIdsAdded);\n\n  }, []);\n\n  const getFilteredUsers = (stateUsers, searchValue) => {\n    const users = JSON.parse(JSON.stringify(stateUsers));\n    Object.keys(users).forEach(userKey => {\n      if (!users[userKey].userName.toLowerCase().includes(searchValue.toLowerCase())) {\n        delete users[userKey];\n      };\n    });\n    return users;\n  };\n  return <div className=\"wrapper\">\n    <ChatComonent {...state}\n      users={getFilteredUsers(state.users, searchValue)}\n      searchValue={searchValue}\n      setSearchValue={setSearchValue} />\n\n\n  </div>\n\n}\n\nexport default App;\n","C:\\Users\\users\\Desktop\\chut\\client\\src\\reportWebVitals.js",[],"C:\\Users\\users\\Desktop\\chut\\client\\src\\socket.js",[],"C:\\Users\\users\\Desktop\\chut\\client\\src\\reducer.js",["46"],"export default (state, action) => {\n    switch (action.type) {\n        case 'JOINED':\n            return {\n                ...state,\n                joined: true,\n                chatID: action.payload.chatID,\n                userName: action.payload.userName,\n            };\n\n        case 'SET_USERS':\n            return {\n                ...state,\n                users: action.payload,\n            };\n\n        case 'NEW_MESSAGE':\n            return {\n                ...state,\n                messages: [...state.messages, action.payload],\n            };\n\n        case 'SET_DATA':\n            return {\n                ...state,\n                users: action.payload.users,\n                messages: action.payload.messages,\n            };\n        case 'SET_CHAT_IDS':\n            return {\n                ...state,\n                chatIds: action.payload,\n            };\n        default:\n            return state;\n    }\n}","C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\Chat\\Chat.component.jsx",["47"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport socket from \"../../socket\";\n\nimport \"./Chat.style.css\";\nimport ChatMessages from '../ChatMessages/ChatMessages.component';\nimport ChatList from '../ChatsList/ChatsList.component';\n\n\n// TODO fix users, user\nconst ChatComponent = ({ users, chatID, chatIds, searchValue, setSearchValue }) => {\n  const currentUser = JSON.parse(localStorage.getItem('chatik-user'));\n  const [selectedUser, setSelectedUser] = useState();\n  const [messages, setMessages] = useState({});\n\n  const sendMessage = (messageValue, chatId, receiverId) => {\n    socket.emit('MESSAGE_SENT', { text: messageValue, chatId, senderId: currentUser.id });\n    const userMessages = messages[receiverId] ? messages[receiverId] : [];\n    setMessages({\n      ...messages,\n      ...{ [receiverId]: [...userMessages, { text: messageValue, sent: true }] }\n    });\n  };\n\n  const onReceivedMessage = ({ text, senderId }) => {\n    console.log('received', text, senderId)\n    const userMessages = messages[senderId] ? messages[senderId] : [];\n    setMessages({\n      ...messages,\n      ...{ [senderId]: [...userMessages, { text, sent: false }] }\n    });\n  };\n\n  useEffect(() => {\n    socket.on('MESSAGE_RECEIVED', onReceivedMessage);\n  }, [messages]);\n\n  const getOnlineUsers = stateUsers => {\n    const users = JSON.parse(JSON.stringify(stateUsers));\n    Object.keys(users).forEach(userKey => {\n      if (!users[userKey].online) {\n        delete users[userKey];\n      };\n    });\n    return users;\n  };\n\n  return (\n    <div className=\"chat\">\n\n      {selectedUser\n        ? <ChatMessages user={selectedUser}\n          chatIds={chatIds}\n          sendMessage={sendMessage}\n          messages={messages[selectedUser.id]\n            ? messages[selectedUser.id]\n            : []} />\n        : <div className=\"chat-messages\">Select chat</div>}\n\n      <div className=\"chat-users\" >\n        <Tabs>\n          <TabList>\n            <Tab>Online</Tab>\n            <Tab>All</Tab>\n          </TabList>\n\n          <TabPanel>\n            <ChatList users={getOnlineUsers(users)} setSelectedUser={setSelectedUser} />\n          </TabPanel>\n          <TabPanel>\n            <ChatList users={users} setSelectedUser={setSelectedUser} />\n          </TabPanel>\n        </Tabs>\n        <div>\n          <input\n            className=\"form-control\"\n            placeholder=\"Search...\"\n            value={searchValue}\n            onChange={e => setSearchValue(e.target.value)}\n          ></input>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatComponent;\n","C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\ChatMessages\\ChatMessages.component.jsx",[],"C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\ChatsList\\ChatsList.component.jsx",[],"C:\\Users\\users\\Desktop\\chut\\client\\src\\components\\ChatListItem\\ChatListItem.component.jsx",["48","49"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ChatListItemComponent = ({ user }) => {\r\n  const [avatar, setAvatar] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    const avatar = await axios.get(\r\n      `http://localhost:8080/${user.userAvatarName}.png`\r\n    );\r\n    await setAvatar(avatar);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div>\r\n        {avatar.config && (\r\n          <img src={avatar.config.url} width=\"50\" height=\"50\" alt=\"''\" />\r\n        )}\r\n        {user.online && (\r\n          <svg height=\"30\" width=\"30\">\r\n            <circle cx=\"5\" cy=\"20\" r=\"5\" fill=\"green\"></circle>\r\n          </svg>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <b>{user.userName}</b>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItemComponent;\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":73,"column":6,"nodeType":"56","endLine":73,"endColumn":8,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":1,"nodeType":"60","endLine":37,"endColumn":2},{"ruleId":"54","severity":1,"message":"61","line":38,"column":6,"nodeType":"56","endLine":38,"endColumn":16,"suggestions":"62"},{"ruleId":"54","severity":1,"message":"63","line":8,"column":13,"nodeType":"64","endLine":13,"endColumn":4},{"ruleId":"54","severity":1,"message":"65","line":13,"column":6,"nodeType":"56","endLine":13,"endColumn":8,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onEnter', 'onNewUserJoined', 'onUserGenerated', and 'onUserListChanged'. Either include them or remove the dependency array.","ArrayExpression",["69"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'onReceivedMessage'. Either include it or remove the dependency array.",["70"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'user.userAvatarName'. Either include it or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [onEnter, onNewUserJoined, onUserGenerated, onUserListChanged]",{"range":"78","text":"79"},"Update the dependencies array to be: [messages, onReceivedMessage]",{"range":"80","text":"81"},"Update the dependencies array to be: [user.userAvatarName]",{"range":"82","text":"83"},[1805,1807],"[onEnter, onNewUserJoined, onUserGenerated, onUserListChanged]",[1370,1380],"[messages, onReceivedMessage]",[363,365],"[user.userAvatarName]"]